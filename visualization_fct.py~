import numpy as np
import pandas as pd
import sys
sys.path.insert(20, '/home/nicolas/anaconda2/lib/python2.7/site-packages')

import datashader as ds
import datashader.transfer_functions as tf
from datashader.callbacks import InteractiveImage
from datashader import reductions

from bokeh.palettes import Spectral3, Spectral9
from bokeh.io import gridplot

from bokeh.plotting import figure, output_notebook, show
from bokeh.plotting import Figure

import seaborn as sns

%matplotlib notebook
output_notebook()


def base_plot(x_name, y_name):
    p = Figure(
        x_range=(0, data_thr[x_name].max()),
        y_range=(0, data_thr[y_name].max()),
        tools='pan,wheel_zoom,box_zoom,reset', 
        plot_width=800, 
        plot_height=300,
    )
    p.xgrid.grid_line_color = None
    p.ygrid.grid_line_color = None
    p.xaxis.axis_label = x_name
    p.yaxis.axis_label = y_name
    p.xaxis.axis_label_text_font_size = '12pt'
    p.yaxis.axis_label_text_font_size = '12pt'
    return p

def myplot(x_name='rateCA', y_name='rate', preds=False):
    def create_image(x_range, y_range, w, h):
        cvs = ds.Canvas(plot_height=300, plot_width=900, x_range=x_range, y_range=y_range)
        if preds is True:
            agg = cvs.points(data_thr, x_name, y_name, ds.count_cat('preds'))
            color_key = ['red', 'blue', 'yellow'] #Spectral9
            img = tf.colorize(agg, color_key)
            mask_img = np.array([[1, 1, 1, 1, 1],
                                 [1, 0, 0, 0, 1],
                                 [1, 0, 0, 0, 1],
                                 [1, 0, 0, 0, 1],
                                 [1, 1, 1, 1, 1]])

            img2 = tf.spread(img, mask=mask_img)  # to make pixel larger
            return img2
        else:
            agg = cvs.points(data_thr, x_name, y_name, ds.count())
            return tf.interpolate(agg)

    p = base_plot(x_name, y_name)
    return InteractiveImage(p, create_image)
